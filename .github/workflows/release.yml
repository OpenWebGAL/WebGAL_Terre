name: Release WebGAL Terre

on:
  workflow_dispatch:
  push:
    tags:
      - '*.*'

jobs:
  build-linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: sh release-linux.sh
      - name: Compress
        run: 7z a -tzip release/WebGAL_Terre_Linux.zip release/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Linux
          path: release/WebGAL_Terre_Linux.zip
  build-arm64:
    name: Build Linux ARM64 Binary
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: sh release-linux-arm64.sh
      - name: Compress
        run: 7z a -tzip release/WebGAL_Terre_Linux_Arm64.zip release/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Linux_Arm64
          path: release/WebGAL_Terre_Linux_Arm64.zip
  build-mac:
    name: Build MacOS Binary
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: sh release-mac.sh
      - name: Compress
        run: 7z a -tzip release/WebGAL_Terre_Mac.zip release/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Mac
          path: release/WebGAL_Terre_Mac.zip
  build-windows:
    name: Build Windows Binary
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'
      - name: Build
        shell: bash
        run: ./release.sh
      - name: Compress
        run: 7z a -tzip release/WebGAL_Terre_Windows.zip release/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Windows
          path: release/WebGAL_Terre_Windows.zip
  build-windows-nsis:
    name: Build Windows Setup
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'
      - name: Build
        shell: bash
        run: ./release.sh
      - name: Build Setup
        shell: bash
        run: mkdir bundle && yarn nsis-bundle
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Windows_Setup
          path: bundle/WebGal_Terre_Setup.exe
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    env:
      KEYSTORE: ${{ secrets.KEYSTORE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21
      - name: Decode and save keystore
        if: ${{ env.KEYSTORE != '' }}
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > packages/terre-android/app/keystore.jks
      - name: Save key.properties
        if: ${{ env.KEYSTORE != '' }}
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> packages/terre-android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> packages/terre-android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> packages/terre-android/key.properties
          echo "storeFile=keystore.jks" >> packages/terre-android/key.properties
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: sh release-android.sh
      - name: Upload Release Artifact
        if: ${{ env.KEYSTORE != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Android
          path: release/WebGAL_Terre_Android.apk
      - name: Upload Debug Artifact
        if: ${{ env.KEYSTORE == '' }}
        uses: actions/upload-artifact@v4
        with:
          name: WebGAL_Terre_Android_debug
          path: release/WebGAL_Terre_Android_debug.apk
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ['build-linux','build-arm64','build-mac','build-windows','build-windows-nsis','build-android']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: WebGAL Terre ${{ github.ref }}
          body_path: releasenote.md
          draft: true
          prerelease: false

      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WebGAL_Terre_Linux/WebGAL_Terre_Linux.zip
          asset_name: WebGAL_Terre_Linux_${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Linux Arm64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WebGAL_Terre_Linux_Arm64/WebGAL_Terre_Linux_Arm64.zip
          asset_name: WebGAL_Terre_Linux_Arm64_${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload MacOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WebGAL_Terre_Mac/WebGAL_Terre_Mac.zip
          asset_name: WebGAL_Terre_Mac_${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WebGAL_Terre_Windows/WebGAL_Terre_Windows.zip
          asset_name: WebGAL_Terre_Windows_${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Setup Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WebGAL_Terre_Windows_Setup/WebGal_Terre_Setup.exe
          asset_name: WebGAL_Terre_Windows_Setup_${{ github.ref_name }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload Android Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KEYSTORE: ${{ secrets.KEYSTORE }}
        if: ${{ env.KEYSTORE != '' }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WebGAL_Terre_Android/WebGAL_Terre_Android.apk
          asset_name: WebGAL_Terre_Android_${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
